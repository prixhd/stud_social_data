package com.example.studdata.config;

import com.example.studdata.dao.FacultyRepository;
import com.example.studdata.dao.FoundationRepository;
import com.example.studdata.dao.ScholarshipRepository;
import com.example.studdata.dao.StudyFormRepository;
import com.example.studdata.model.Faculty;
import com.example.studdata.model.Foundation;
import com.example.studdata.model.Scholarship;
import com.example.studdata.model.StudyForm;
import lombok.AllArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

@Component
public class DataInitializer implements CommandLineRunner {
    private static final Logger log = LoggerFactory.getLogger(DataInitializer.class);

    @Autowired
    private FacultyRepository facultyRepository;

    @Autowired
    private ScholarshipRepository scholarshipRepository;

    @Autowired
    private FoundationRepository foundationRepository;

    @Autowired
    private StudyFormRepository studyFormRepository;

    @Override
    public void run(String... args) throws Exception {
        log.info("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...");

        if (facultyRepository.count() == 0) {
            String[] faculties = {
                    "–ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π", "–í–æ—Å—Ç–æ–∫–æ–≤–µ–¥–µ–Ω–∏—è", "–§–∏–∑–∫—É–ª—å—Ç—É—Ä–Ω—ã–π", "–°–æ—Ü–∏–∞–ª—å–Ω—ã–π",
                    "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π", "–§–ò–Ø", "–§–ò–∏–ò–¢", "–ö—É–ª—å—Ç—É—Ä—ã", "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π",
                    "–ü—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –∏ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏", "–§–∏–∑–∏—á–µ—Å–∫–∏–π", "–§–∏–ª–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π",
                    "–•–∏–º–∏—á–µ—Å–∫–∏–π", "–≠–∫–æ–ª–æ–≥–∏–∏", "–≠–∫–æ–Ω–æ–º–∏–∫–∏", "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π",
                    "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", "–ö–æ–ª–ª–µ–¥–∂"
            };

            for (String facultyName : faculties) {
                facultyRepository.save(new Faculty(facultyName));
            }
            log.info("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {} —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤", faculties.length);
        } else {
            if (facultyRepository.findByName("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ") == null) {
                facultyRepository.save(new Faculty("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"));
                log.info("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∞–∫—É–ª—å—Ç–µ—Ç: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ");
            }
            if (facultyRepository.findByName("–ö–æ–ª–ª–µ–¥–∂") == null) {
                facultyRepository.save(new Faculty("–ö–æ–ª–ª–µ–¥–∂"));
                log.info("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∞–∫—É–ª—å—Ç–µ—Ç: –ö–æ–ª–ª–µ–¥–∂");
            }
        }

        if (studyFormRepository.count() == 0) {
            studyFormRepository.save(new StudyForm("–ë–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç"));
            studyFormRepository.save(new StudyForm("–ú–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞"));
            log.info("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —Ñ–æ—Ä–º—ã –æ–±—É—á–µ–Ω–∏—è");
        }

        if (scholarshipRepository.count() == 0) {
            scholarshipRepository.save(new Scholarship("–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è"));
            scholarshipRepository.save(new Scholarship("–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è –≤ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–º —Ä–∞–∑–º–µ—Ä–µ"));
            log.info("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–∏–ø—ã —Å—Ç–∏–ø–µ–Ω–¥–∏–π");
        }

        if (foundationRepository.count() == 0) {
            foundationRepository.save(new Foundation("–£–°–ó–ù"));
            foundationRepository.save(new Foundation("–ò–Ω–≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å"));
            foundationRepository.save(new Foundation("–ü–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ"));
            foundationRepository.save(new Foundation("–í–µ—Ç–µ—Ä–∞–Ω –±–æ–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"));
            log.info("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –æ—Å–Ω–æ–≤–∞–Ω–∏—è");
        } else {
            Foundation oldFoundation = foundationRepository.findByName("–í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π");
            if (oldFoundation != null) {
                oldFoundation.setName("–í–µ—Ç–µ—Ä–∞–Ω –±–æ–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π");
                foundationRepository.save(oldFoundation);
                log.info("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –æ—Å–Ω–æ–≤–∞–Ω–∏–µ: –í–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏–π -> –í–µ—Ç–µ—Ä–∞–Ω –±–æ–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π");
            } else if (foundationRepository.findByName("–í–µ—Ç–µ—Ä–∞–Ω –±–æ–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π") == null) {
                foundationRepository.save(new Foundation("–í–µ—Ç–µ—Ä–∞–Ω –±–æ–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"));
                log.info("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –æ—Å–Ω–æ–≤–∞–Ω–∏–µ: –í–µ—Ç–µ—Ä–∞–Ω –±–æ–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π");
            }
        }

        log.info("üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
    }
}